# Server Configuration
server.port=8081
server.servlet.context-path=/

# Application Name
spring.application.name=client-service

# Database Configuration - PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:~/test;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_DIALECT:org.hibernate.dialect.H2Dialect}

# Data initialization - always initialize
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=true

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_DDL:create-drop}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.cs301.client_service=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
spring.kafka.producer.properties.schema.registry.url=${KAFKA_REGISTRY:http://127.0.0.1:8000}
spring.kafka.producer.properties.auto.register.schemas=true
spring.kafka.producer.properties.use.latest.version=true
spring.kafka.topic.c2c=c2c
spring.kafka.topic.a2c=a2c
spring.kafka.topic.log=${KAFKA_LOG_TOPIC:logs}

# Jackson JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.default-property-inclusion=NON_NULL

# Spring Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Spring OAuth2 JWT
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER:crm-auth-service}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/api/v1/auth/.well-known/jwks.json}

# CORS Configuration
cors.origin=${CORS_ORIGIN:http://localhost:3000}

plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.cs301'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Protocol Buffers
	implementation 'com.google.protobuf:protobuf-java:3.25.0'
	implementation 'com.google.protobuf:protobuf-java-util:3.25.0'

	// Database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Jackson for JSON and Java 8 Date/Time
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.0'
	}
	generateProtoTasks {
		all()*.plugins {
			java {}
		}
	}
}

test {
	useJUnitPlatform()
}

// Define the main class for the application
application {
    mainClass = 'com.cs301.client_service.ClientServiceApplication'
}
